# "org" ensures this Service is used with the correct Serverless Framework License Key.
org: mangotest
# "service" is the name of this project. This will also be added to your AWS resource names.
service: auction-service

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - ${file(src/iam/AuctionsTableIAM.yml):AuctionsTableIAM}
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
  httpApi:
    authorizers:
      customAuthorizer:
        type: request
        functionArn: ${self:custom.authorizer}

functions:
  createAuction:
    handler: src/handlers/auctions/create.handler
    events:
      - httpApi:
          method: POST
          path: /auctions
          authorizer:
            name: customAuthorizer
  getAuctions:
    handler: src/handlers/auctions/get.handler
    events:
      - httpApi:
          method: GET
          path: /auctions
          authorizer:
            name: customAuthorizer
  getAuctionById:
    handler: src/handlers/auctions/getById.handler
    events:
      - httpApi:
          method: GET
          path: /auctions/{id}
          authorizer:
            name: customAuthorizer
  placeBid:
    handler: src/handlers/auctions/placeBid.handler
    events:
      - httpApi:
          method: PATCH
          path: /auctions/{id}/bid
          authorizer:
            name: customAuthorizer
  processAuctions:
    handler: src/handlers/auctions/process.handler

resources:
  Resources:
    AuctionsTable: ${file(src/resources/AuctionsTable.yml):AuctionsTable}

custom:
  authorizer: arn:aws:lambda:${aws:region}:${aws:accountId}:function:serverless-auth0-authorizer-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn

package:
  individually: true
